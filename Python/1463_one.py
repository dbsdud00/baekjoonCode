import sys

n = int(sys.stdin.readline())
# Bottom Up 풀이
d = [0] * (n + 1)       # d를 0이 n+1개 있는 리스트로 초기화 
                        # d[i]는 i가 1이되는데 필요한 최소 연산횟수가 저장된다.
                        # 예를들어 d[2]는 2가 1이되는데 필요한 연산횟수로 1이 저장된다.
for i in range(2, n + 1):   # 1 이 1이 되는데 필요한 연산횟수는 0이므로 2부터 시작하여 n까지 반복한다.
    d[i] = d[i - 1] + 1     # 3번 뺄셈 연산으로 d[3]의 경우 d[2]의 최소연산횟수 1에 1을더한 2의 값을 d[3]에 저장한다.
    if i % 3 == 0:                              # 3으로 나누기 가능할 때 d[3]의 경우
        d[i] = min(d[i], d[i // 3] + 1)	        # 뺄셈 연산을 통해 저장 되어 있던 2의 값과 3 나누기 연산을 통해 저장될 값을 비교해 최소의 값을 d[3]에 저장한다.
                                                # d[3//3]은 d[1]이고 d[1]에 저장된 값인 0에 1을 더한 1이 더 적기에 d[3]에 저장된다.
    if i % 2 == 0:
        d[i] = min(d[i], d[i // 2] + 1)
                                                # n이 10일 경우 빼기 연산과 2나누기 연산이 가능한데
print(d[n])                                     # 빼기 연산일 시 d[9] + 1 : 3의 연산횟수를 가지고
                                                # 2나누기 연산일 시 d[5] + 1 : 4의 연산횟수를 가지므로 
                                                # 3의 값을 d[10]에 저장한다.